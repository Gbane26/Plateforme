# Generated by Django 2.2.7 on 2019-11-22 23:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('quizz_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', tinymce.models.HTMLField(verbose_name='description')),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cours',
                'verbose_name_plural': 'Courss',
            },
        ),
        migrations.CreateModel(
            name='Epreuve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150)),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Epreuve',
                'verbose_name_plural': 'Epreuves',
            },
        ),
        migrations.CreateModel(
            name='Specialite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250)),
                ('description', tinymce.models.HTMLField(verbose_name='description')),
                ('logo', models.ImageField(upload_to='Specialite')),
                ('code', models.BooleanField(default=False)),
                ('quizz', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Specialite',
                'verbose_name_plural': 'Specialites',
            },
        ),
        migrations.CreateModel(
            name='UserSpecialite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_demande', models.BooleanField(default=False)),
                ('nanplus', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('specialite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userspecialite_specialite', to='specialisation.Specialite')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_specialite', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserSpeciallite',
                'verbose_name_plural': 'UserSpecialites',
            },
        ),
        migrations.CreateModel(
            name='ResultatEpreuve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('epreuve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultat_epreuve', to='specialisation.Epreuve')),
                ('quizz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resultat_quizz', to='quizz_app.QuizzUser')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resultat_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ResultatEpreuve',
                'verbose_name_plural': 'ResultatEpreuves',
            },
        ),
        migrations.CreateModel(
            name='RessourceVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='video')),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_cours', to='specialisation.Cours')),
            ],
            options={
                'verbose_name': 'RessourceVideo',
                'verbose_name_plural': 'RessourceVideos',
            },
        ),
        migrations.CreateModel(
            name='RessourcePdf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(upload_to='pdf')),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_cours', to='specialisation.Cours')),
            ],
            options={
                'verbose_name': 'RessourcePdf',
                'verbose_name_plural': 'RessourcePdfs',
            },
        ),
        migrations.AddField(
            model_name='epreuve',
            name='specialite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='epreuve_specialite', to='specialisation.Specialite'),
        ),
        migrations.AddField(
            model_name='cours',
            name='epreuve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours_epreuve', to='specialisation.Epreuve'),
        ),
    ]
